apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.postgresql.name }}
  namespace: {{ .Values.postgresql.namespace }}
spec:
  serviceName: "postgres"
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.postgresql.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.postgresql.name }}
    spec:
      initContainers:
      - name: fix-permissions
        image: busybox
        command: ["sh", "-c", "mkdir -p /data/postgres-data && chown -R 1001:1001 /data/postgres-data && chmod 0700 /data/postgres-data"]
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: postgres-storage
          mountPath: /data
      containers:
      - name: postgres
        image: postgres:14
        ports:
        - containerPort: 5432
          name: postgres
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        env:
        - name: POSTGRES_HOST
          value: {{ .Values.envValues.dbHost}}
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_DB
          value: {{ .Values.envValues.dbName}}
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.postgresSecret.name}}
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.postgresSecret.name}}
              key: password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: PGSSLMODE
          value: require
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
          subPath: postgres-data
        - name: ssl-certs
          mountPath: /etc/postgresql/certs
          readOnly: true
        lifecycle:
          postStart:
            exec:
              command:  
                - sh
                - -c
                - |
                  set -e;
                  if [ ! -s /var/lib/postgresql/data/pgdata/PG_VERSION ]; then
                    echo "Initializing PostgreSQL data directory...";
                    chown -R 1001:1001 /var/lib/postgresql/data/pgdata;
                    chmod 0700 /var/lib/postgresql/data/pgdata;
                    chmod 0600 /etc/postgresql/certs/tls.key
                    su-exec postgres initdb -D /var/lib/postgresql/data/pgdata;
                  fi;
                  echo "Configuring SSL...";
                  echo "ssl = on" >> /var/lib/postgresql/data/pgdata/postgresql.conf;
                  echo "ssl_cert_file = '/etc/postgresql/certs/tls.crt'" >> /var/lib/postgresql/data/pgdata/postgresql.conf;
                  echo "ssl_key_file = '/etc/postgresql/certs/tls.key'" >> /var/lib/postgresql/data/pgdata/postgresql.conf;
                  echo "hostssl all all 0.0.0.0/0 md5" >> /var/lib/postgresql/data/pgdata/pg_hba.conf;         
      volumes:
      - name: ssl-certs
        secret:
          secretName: {{ .Values.postgresSecret.name}}
  volumeClaimTemplates:
  - metadata:
      name: {{ .Values.persistentVolume.name}}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 500Mi